module Cattri
  # Base error class for all exceptions raised by Cattri.
  #
  # All Cattri-specific errors inherit from this class, allowing unified
  # rescue handling at the framework level.
  #
  # The backtrace is preserved and may be filtered before raising.
  #
  # @example
  #   rescue Cattri::Error => e
  #     puts "Something went wrong with Cattri: #{e.message}"
  class Error < StandardError
    # Initializes the error with an optional message and caller backtrace.
    #
    # @param msg [String, nil] the error message
    # @param backtrace [Array<String>] optional backtrace (defaults to `caller`)
    def initialize: (?::String? msg, ?::Array[::String] backtrace) -> void
  end

  # Raised for any attribute-related definition or usage failure.
  #
  # This includes method conflicts, invalid configuration, and
  # write attempts on `final` attributes.
  #
  # @see Cattri::Error
  class AttributeError < Error
  end
end
